name: Checks

on:
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint_and_test:
    name: Lint and test
    runs-on: warp-ubuntu-latest-x64-32x
    env:
      # Set features for the Makefile
      FEATURES: ${{ matrix.features }}
    strategy:
      matrix:
        toolchain:
          - nightly
        features:
          - ""
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      # https://github.com/dtolnay/rust-toolchain
      - name: Setup rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          components: "rustfmt,clippy"

      # https://github.com/swatinem/rust-cache
      - name: Run Swatinem/rust-cache@v2
        if: ${{ !env.ACT }}
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      # https://github.com/Mozilla-Actions/sccache-action
      - name: Run sccache-action
        if: ${{ !env.ACT }}
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Set sccache env vars
        if: ${{ !env.ACT }}
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

      - name: Install Foundry toolchain
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install native dependencies
        run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev clang libclang-dev llvm build-essential pkg-config

      - name: Compile tester
        run: make tester

      - name: Compile op-rbuilder
        run: cargo build -p op-rbuilder --bin op-rbuilder

      - name: Download op-reth
        run: |
          ./scripts/ci/download-op-reth.sh
          echo "$(pwd)" >> $GITHUB_PATH

      - name: Lint
        run: make lint

      - name: Test
        run: make test

  op-integration:
    name: Op Integration tests
    runs-on: warp-ubuntu-latest-x64-32x
    strategy:
      matrix:
        toolchain:
          - stable
        features:
          - ""
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      # https://github.com/dtolnay/rust-toolchain
      - name: Setup rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}

      # https://github.com/swatinem/rust-cache
      - name: Run Swatinem/rust-cache@v2
        if: ${{ !env.ACT }}
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      # https://github.com/Mozilla-Actions/sccache-action
      - name: Run sccache-action
        if: ${{ !env.ACT }}
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Set sccache env vars
        if: ${{ !env.ACT }}
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

      - name: Download op-reth
        run: |
          ./scripts/ci/download-op-reth.sh
          echo "$(pwd)" >> $GITHUB_PATH

      - name: Install native dependencies
        if: ${{ env.ACT }}
        run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev clang libclang-dev llvm build-essential pkg-config

      - name: Compile tester
        run: make tester

      - name: Build the rbuilder
        run: cargo build -p op-rbuilder --bin op-rbuilder

      - name: Generate test genesis file
        run: cargo run -p op-rbuilder --bin tester --features=testing -- genesis --output genesis.json

      - name: Run integration tests
        run: cargo test --package op-rbuilder --lib

      - name: Aggregate playground logs
        # This steps fails if the test fails early and the playground logs dir has not been created
        if: ${{ failure() }}
        run: |
          mkdir /tmp/playground-logs
          mv $HOME/.playground/devnet/logs /tmp/playground-logs
          mv integration_logs /tmp/playground-logs

      - name: Archive playground logs
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: playground-logs
          path: /tmp/playground-logs
          retention-days: 5
